import argparse
from logging import basicConfig, getLogger, DEBUG, INFO
from {{klass.__module__}} import {{klass.__name__}}

log = getLogger(__name__)


def set_verbose(flag):
    fmt = '%(asctime)s %(levelname)s %(message)s'
    if flag:
        basicConfig(level=DEBUG, format=fmt)
    else:
        basicConfig(level=INFO, format=fmt)


def main():
    parser = argparse.ArgumentParser(
        prog="{{klass.__name__}}", description="{{classmeta.doc}}")
    # constructor argument
    parser.set_defaults(__FUNCNAME__="new")
    {{klass.__name__}}_sub = parser.add_subparsers()
    {% for i in constructor -%}
    {% if i.name|length == 1 -%}
    parser.add_argument("-{{i.name}}", default={{i.default}}, type={{i.type.__name__|default('str')}})
    {% else -%}
    parser.add_argument("--{{i.name}}", default={{i.default}}, type={{i.type.__name__|default('str')}})
    {%- endif %}
    {% endfor -%}
    parser.add_argument("--dry", action="store_true", default=False)
    parser.add_argument("--verbose", action="store_true", default=False)
{% for funcname, args in funcs.items() %}
    # func {{funcname}}
    {{funcname}} = {{klass.__name__}}_sub.add_parser("{{funcname}}")
    {{funcname}}.set_defaults(__FUNCNAME__="{{funcname}}")
    {% for arg in args -%}
    {% if arg.name|length == 1 -%}
    {{funcname}}.add_argument("-{{arg.name}}", default={{arg.default}}, type={{arg.type.__name__ | default('str')}})
    {% else -%}
    {{funcname}}.add_argument("--{{arg.name}}", default={{arg.default}}, type={{arg.type.__name__ | default('str')}})
    {%- endif %}
    {% endfor %}
{% endfor %}
    parsed = parser.parse_args()
    set_verbose(parsed.verbose)
    if parsed.dry:
        log.info("parsed: %s", parsed)
        return
    log.debug("{{klass.__name__}}: %s", parsed)
    if parsed.__FUNCNAME__ == "new":
        parser.print_usage()
        return
    obj = {{klass.__name__}}(parsed.{{constructor|map(attribute="name")|join(", parsed.")}})
    log.debug("obj: %s", obj)
    {% for funcname, args in funcs.items() -%}
    # func {{funcname}}
    if parsed.__FUNCNAME__ == "{{funcname}}":
        args = {
          {% for arg in args -%}
          "{{arg.name}}": parsed.{{arg.name}},
          {% endfor -%}
        }
    {% endfor %}
    log.debug("calling %s(%s)", parsed.__FUNCNAME__, args)
    res = getattr(obj, parsed.__FUNCNAME__)(**args)
    log.debug("result: %s", res)
    print(res)

if __name__ == "__main__":
    main()
